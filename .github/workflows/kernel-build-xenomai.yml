name: Xenomai Pi kernel build tests

on:
  pull_request:
    paths-ignore:
      - '.github/**'
    branches: [ "rpi-*" ]
  push:
    paths-ignore:
      - '.github/**'
    branches: [ "rpi-*" ]
  workflow_dispatch:

env:
  NUM_JOBS: 3

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: bcm2711_arm64
            arch: arm64
            defconfig: bcm2711_defconfig
            kernel: kernel8

    steps:
    - name: Update install
      run:
        sudo apt-get update

    - name: Install toolchain
      run: |
        sudo apt-get install gcc-aarch64-linux-gnu
      timeout-minutes: 5

    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
        clean: true

    - name: Get Xenomai
      run: |
        cd ${{github.workspace}}
        #echo "[LS]: $(ls -al)"
        wget https://source.denx.de/Xenomai/xenomai/-/archive/v3.2.4/xenomai-v3.2.4.tar.bz2 --no-check-certificate
        tar xjvf xenomai-v3.2.4.tar.bz2
        echo "[LS]: $(ls -al)"
              
    - name: Prepare Kernel with Xenomai
      run: |
        ls
        ./xenomai-v3.2.4/scripts/prepare-kernel.sh  --arch=arm64 --linux=./
      
    - name: Build kernel ${{matrix.name}}
      run: |
        KERNEL=kernel8
        cd ${{github.workspace}}
        mkdir mnt
        mkdir mnt/fat32
        mkdir mnt/ext4
        
        #echo "Default config for BCM2711 "
        #make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- bcm2711_defconfig
        #echo "Make Image "
        #make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- Image modules dtbs -j 2
        ls
        #sudo env PATH=$PATH make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- INSTALL_MOD_PATH=mnt/ext4 modules_install
        #sudo cp arch/arm64/boot/Image mnt/fat32/$KERNEL.img
        #sudo cp arch/arm64/boot/dts/broadcom/*.dtb mnt/fat32/
        #sudo cp arch/arm64/boot/dts/overlays/*.dtb* mnt/fat32/overlays/
        #sudo cp arch/arm64/boot/dts/overlays/README mnt/fat32/overlays/
        
    - name: Tar build
      run: tar -cvf ${{matrix.name}}_build.tar -C ${{github.workspace}}/mnt .

    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.name}}_build
        path: ${{matrix.name}}_build.tar
        retention-days: 90
